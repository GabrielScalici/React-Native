{"version":3,"sources":["detach/AndroidShellApp.js"],"names":["async","regex","replace","filename","let","file","await","fs","promise","readFile","fileString","toString","writeFile","regexFileAsync","startRegex","endRegex","lines","split","filteredLines","inDeleteRange","i","length","match","push","join","deleteLinesInFileAsync","androidSrcPath","shellPath","spawnAsync","stdio","cwd","path","exponentDirectory","copyToShellApp","fileName","copy","e","console","warn","copyInitialShellAppFilesAsync","context","shellPathForContext","url","published","manifest","config","releaseChannel","data","privateConfig","fullManifestUrl","versionCode","javaPackage","android","package","Error","name","iconUrl","scheme","bundleUrl","isFullManifest","notificationIconUrl","notification","version","backgroundImages","backgroundImagesForApp","splashBackgroundColor","getSplashScreenBackgroundColor","remove","buildGradleFile","readFileSync","androidVersion","shouldShowLoadingView","xmlWeirdAndroidEscape","permissions","content","map","p","whitelist","forEach","s","includes","identifier","pop","blacklist","filter","writeFileSync","JSON","stringify","saveUrlToPathAsync","globby","absolute","filePath","removeSync","_","image","certificateHash","googleAndroidApiKey","branch","fabric","googleMaps","googleSignIn","apiKey","buildSecret","runShellAppModificationsAsync","build","androidBuildConfiguration","gradleArgs","process","env","GRADLE_DAEMON_DISABLED","unshift","spawnAsyncThrowError","keystorePassword","keyPassword","keystore","keyAlias","outputFile","buildShellAppAsync","require","JsonFile","replaceString","getManifestAsync","TURTLE_WORKING_DIR_PATH","EXPO_UNIVERSE_DIR","original","noAmps","noLt","noGt","noApos","exports","updateAndroidShellAppAsync","args","sdkVersion","androidPackage","privateConfigFile","alias","imageKeys","basePath","get","splash","reduce","acc","imageKey","backgroundColor","resizeMode","createAndroidShellAppAsync","configuration","ensureDir","privateConfigContents","parse","StandaloneContext","createServiceContext","skipBuild","type","projectPath"],"mappings":"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","file":"../../detach/AndroidShellApp.js","sourcesContent":["// Copyright 2015-present 650 Industries. All rights reserved.\n/**\n * @flow\n */\n\n'use strict';\n\nconst fs = require('fs-extra');\nconst path = require('path');\nconst JsonFile = require('@expo/json-file');\nconst replaceString = require('replace-string');\nconst _ = require('lodash');\nconst globby = require('globby');\n\nimport * as ExponentTools from './ExponentTools';\nimport StandaloneContext from './StandaloneContext';\n\nconst { getManifestAsync, saveUrlToPathAsync, spawnAsyncThrowError, spawnAsync } = ExponentTools;\n\nfunction exponentDirectory() {\n  if (process.env.TURTLE_WORKING_DIR_PATH) {\n    return process.env.TURTLE_WORKING_DIR_PATH;\n  } else if (process.env.EXPO_UNIVERSE_DIR) {\n    return path.join(process.env.EXPO_UNIVERSE_DIR, 'exponent');\n  } else {\n    throw new Error(`Can't determine exponent directory`);\n  }\n}\n\nasync function regexFileAsync(regex, replace, filename) {\n  let file = await fs.promise.readFile(filename);\n  let fileString = file.toString();\n  await fs.promise.writeFile(filename, fileString.replace(regex, replace));\n}\n\n// Matches sed /d behavior\nasync function deleteLinesInFileAsync(startRegex, endRegex, filename) {\n  let file = await fs.promise.readFile(filename);\n  let fileString = file.toString();\n  let lines = fileString.split(/\\r?\\n/);\n  let filteredLines = [];\n  let inDeleteRange = false;\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].match(startRegex)) {\n      inDeleteRange = true;\n    }\n\n    if (!inDeleteRange) {\n      filteredLines.push(lines[i]);\n    }\n\n    if (inDeleteRange && lines[i].match(endRegex)) {\n      inDeleteRange = false;\n    }\n  }\n  await fs.promise.writeFile(filename, filteredLines.join('\\n'));\n}\n\nfunction xmlWeirdAndroidEscape(original) {\n  let noAmps = replaceString(original, '&', '&amp;');\n  let noLt = replaceString(noAmps, '<', '&lt;');\n  let noGt = replaceString(noLt, '>', '&gt;');\n  let noApos = replaceString(noGt, '\"', '\\\\\"');\n  return replaceString(noApos, \"'\", \"\\\\'\");\n}\n\nexports.updateAndroidShellAppAsync = async function updateAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    androidPackage,\n    privateConfigFile,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    releaseChannel,\n    outputFile,\n  } = args;\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n  });\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n  let bundleUrl = manifest.bundleUrl;\n\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'));\n  await fs.writeFileSync(\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n    JSON.stringify(manifest)\n  );\n  await fs.remove(path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle'));\n  await saveUrlToPathAsync(\n    bundleUrl,\n    path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n  );\n\n  await deleteLinesInFileAsync(\n    `START\\ EMBEDDED\\ RESPONSES`,\n    `END\\ EMBEDDED\\ RESPONSES`,\n    path.join(\n      shellPath,\n      'expoview',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'Constants.java'\n    )\n  );\n\n  await regexFileAsync(\n    '// ADD EMBEDDED RESPONSES HERE',\n    `\n    // ADD EMBEDDED RESPONSES HERE\n    // START EMBEDDED RESPONSES\n    embeddedResponses.add(new EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n    embeddedResponses.add(new EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n    // END EMBEDDED RESPONSES`,\n    path.join(\n      shellPath,\n      'expoview',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'Constants.java'\n    )\n  );\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'expoview',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'Constants.java'\n    )\n  );\n};\n\nfunction backgroundImagesForApp(shellPath, manifest) {\n  // returns an array like:\n  // [\n  //   {url: 'urlToDownload', path: 'pathToSaveTo'},\n  //   {url: 'anotherURlToDownload', path: 'anotherPathToSaveTo'},\n  // ]\n  const imageKeys = ['ldpi', 'mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'];\n  let basePath = path.join(shellPath, 'expoview', 'src', 'main', 'res');\n  if (_.get(manifest, 'android.splash')) {\n    var splash = _.get(manifest, 'android.splash');\n    return _.reduce(\n      imageKeys,\n      function(acc, imageKey) {\n        let url = _.get(splash, `${imageKey}Url`);\n        if (url) {\n          acc.push({\n            url: url,\n            path: path.join(basePath, `drawable-${imageKey}`, 'shell_launch_background_image.png'),\n          });\n        }\n\n        return acc;\n      },\n      []\n    );\n  }\n\n  if (_.get(manifest, 'splash.imageUrl')) {\n    let url = _.get(manifest, 'splash.imageUrl');\n    return [\n      {\n        url: url,\n        path: path.join(basePath, 'drawable-xxxhdpi', 'shell_launch_background_image.png'),\n      },\n    ];\n  }\n\n  return [];\n}\n\nfunction getSplashScreenBackgroundColor(manifest) {\n  let backgroundColor;\n  if (manifest.android && manifest.android.splash && manifest.android.splash.backgroundColor) {\n    backgroundColor = manifest.android.splash.backgroundColor;\n  } else if (manifest.splash && manifest.splash.backgroundColor) {\n    backgroundColor = manifest.splash.backgroundColor;\n  }\n\n  // Default to white\n  if (!backgroundColor) {\n    backgroundColor = '#FFFFFF';\n  }\n  return backgroundColor;\n}\n\n/*\n  if resizeMode is 'cover' we should show LoadingView:\n  using an ImageView, unlike having a BitmapDrawable\n  provides a fullscreen image without distortions\n*/\nfunction shouldShowLoadingView(manifest) {\n  return (\n    (manifest.android &&\n      manifest.android.splash &&\n      manifest.android.splash.resizeMode &&\n      manifest.android.splash.resizeMode === 'cover') ||\n    (manifest.splash && manifest.splash.resizeMode && manifest.splash.resizeMode === 'cover')\n  );\n}\n\nexport async function copyInitialShellAppFilesAsync(androidSrcPath, shellPath) {\n  await spawnAsync(`../../tools-public/generate-dynamic-macros-android.sh`, [], {\n    stdio: 'inherit',\n    cwd: path.join(exponentDirectory(), 'android', 'app'),\n  }); // populate android template files now since we take out the prebuild step later on\n\n  let copyToShellApp = async fileName => {\n    try {\n      await fs.copy(path.join(androidSrcPath, fileName), path.join(shellPath, fileName));\n    } catch (e) {\n      // android.iml is only available locally, not on the builders, so don't crash when this happens\n      console.warn(`Warning: Could not copy ${fileName} to shell app directory.`);\n    }\n  };\n\n  await copyToShellApp('expoview');\n  await copyToShellApp('ReactCommon');\n  await copyToShellApp('ReactAndroid');\n  await copyToShellApp('android.iml');\n  await copyToShellApp('app');\n  await copyToShellApp('build.gradle');\n  await copyToShellApp('gradle');\n  await copyToShellApp('gradle.properties');\n  await copyToShellApp('gradlew');\n  await copyToShellApp('local.properties');\n  await copyToShellApp('settings.gradle');\n  await copyToShellApp('maven');\n}\n\nexports.createAndroidShellAppAsync = async function createAndroidShellAppAsync(args: any) {\n  let {\n    url,\n    sdkVersion,\n    releaseChannel,\n    privateConfigFile,\n    configuration,\n    keystore,\n    alias,\n    keystorePassword,\n    keyPassword,\n    outputFile,\n  } = args;\n\n  let androidSrcPath = path.join(exponentDirectory(), 'android');\n  let shellPath = path.join(exponentDirectory(), 'android-shell-app');\n\n  await fs.remove(shellPath);\n  await fs.ensureDir(shellPath);\n\n  releaseChannel = releaseChannel ? releaseChannel : 'default';\n  let manifest = await getManifestAsync(url, {\n    'Exponent-SDK-Version': sdkVersion,\n    'Exponent-Platform': 'android',\n    'Expo-Release-Channel': releaseChannel,\n  });\n  configuration = configuration ? configuration : 'Release';\n\n  let privateConfig;\n  if (privateConfigFile) {\n    let privateConfigContents = await fs.promise.readFile(privateConfigFile, 'utf8');\n    privateConfig = JSON.parse(privateConfigContents);\n  }\n\n  let androidBuildConfiguration;\n  if (keystore && alias && keystorePassword && keyPassword) {\n    androidBuildConfiguration = {\n      keystore,\n      keystorePassword,\n      keyAlias: alias,\n      keyPassword,\n      outputFile,\n    };\n  }\n\n  let context = StandaloneContext.createServiceContext(\n    androidSrcPath,\n    null,\n    manifest,\n    privateConfig,\n    configuration,\n    url,\n    releaseChannel,\n    androidBuildConfiguration\n  );\n\n  await copyInitialShellAppFilesAsync(androidSrcPath, shellPath);\n  await runShellAppModificationsAsync(context);\n\n  if (!args.skipBuild) {\n    await buildShellAppAsync(context);\n  }\n};\n\nfunction shellPathForContext(context: StandaloneContext) {\n  if (context.type === 'user') {\n    return path.join(context.data.projectPath, 'android');\n  } else {\n    return path.join(exponentDirectory(), 'android-shell-app');\n  }\n}\n\nexport async function runShellAppModificationsAsync(context: StandaloneContext) {\n  let shellPath = shellPathForContext(context);\n  let url: string = context.published.url;\n  let manifest = context.config; // manifest or app.json\n  let releaseChannel = context.published.releaseChannel;\n\n  if (!context.data.privateConfig) {\n    console.warn('Warning: No config file specified.');\n  }\n\n  let fullManifestUrl = `${url.replace('exp://', 'https://')}/index.exp`;\n\n  let versionCode = 1;\n  let javaPackage = manifest.android.package;\n  if (manifest.android.versionCode) {\n    versionCode = manifest.android.versionCode;\n  }\n\n  if (!javaPackage) {\n    throw new Error(\n      'Must specify androidPackage option (either from manifest or on command line).'\n    );\n  }\n\n  let name = manifest.name;\n  let iconUrl =\n    manifest.android && manifest.android.iconUrl ? manifest.android.iconUrl : manifest.iconUrl;\n  let scheme = manifest.scheme;\n  let bundleUrl: ?string = manifest.bundleUrl;\n  let isFullManifest = !!bundleUrl;\n  let notificationIconUrl = manifest.notification ? manifest.notification.iconUrl : null;\n  let version = manifest.version ? manifest.version : '0.0.0';\n  let backgroundImages = backgroundImagesForApp(shellPath, manifest);\n  let splashBackgroundColor = getSplashScreenBackgroundColor(manifest);\n\n  // Clean build directories\n  await fs.remove(path.join(shellPath, 'app', 'build'));\n  await fs.remove(path.join(shellPath, 'ReactAndroid', 'build'));\n  await fs.remove(path.join(shellPath, 'expoview', 'build'));\n\n  // Package\n  await regexFileAsync(\n    `applicationId 'host.exp.exponent'`,\n    `applicationId '${javaPackage}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    `android:name=\"host.exp.exponent\"`,\n    `android:name=\"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Versions\n  let buildGradleFile = await fs.readFileSync(path.join(shellPath, 'app', 'build.gradle'), 'utf8');\n  let androidVersion = buildGradleFile.match(/versionName '(\\S+)'/)[1];\n  await regexFileAsync(\n    'VERSION_NAME = null',\n    `VERSION_NAME = \"${androidVersion}\"`,\n    path.join(\n      shellPath,\n      'expoview',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'Constants.java'\n    )\n  );\n  await deleteLinesInFileAsync(\n    `BEGIN\\ VERSIONS`,\n    `END\\ VERSIONS`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n  await regexFileAsync(\n    '// ADD VERSIONS HERE',\n    `versionCode ${versionCode}\n    versionName '${version}'`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Remove Exponent build script\n  await regexFileAsync(\n    `preBuild.dependsOn generateDynamicMacros`,\n    ``,\n    path.join(shellPath, 'expoview', 'build.gradle')\n  );\n\n  // change javaMaxHeapSize\n  await regexFileAsync(\n    `javaMaxHeapSize \"8g\"`,\n    `javaMaxHeapSize \"6g\"`,\n    path.join(shellPath, 'app', 'build.gradle')\n  );\n\n  // Push notifications\n  await regexFileAsync(\n    '\"package_name\": \"host.exp.exponent\"',\n    `\"package_name\": \"${javaPackage}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  ); // TODO: actually use the correct file\n\n  // TODO: probably don't need this in both places\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n  await regexFileAsync(\n    /host\\.exp\\.exponent\\.permission\\.C2D_MESSAGE/g,\n    `${javaPackage}.permission.C2D_MESSAGE`,\n    path.join(shellPath, 'expoview', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Set INITIAL_URL, SHELL_APP_SCHEME and SHOW_LOADING_VIEW\n  await regexFileAsync(\n    'INITIAL_URL = null',\n    `INITIAL_URL = \"${url}\"`,\n    path.join(\n      shellPath,\n      'expoview',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'Constants.java'\n    )\n  );\n  if (scheme) {\n    await regexFileAsync(\n      'SHELL_APP_SCHEME = null',\n      `SHELL_APP_SCHEME = \"${scheme}\"`,\n      path.join(\n        shellPath,\n        'expoview',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'Constants.java'\n      )\n    );\n  }\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = false',\n      'SHOW_LOADING_VIEW_IN_SHELL_APP = true',\n      path.join(\n        shellPath,\n        'expoview',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'Constants.java'\n      )\n    );\n  }\n\n  // App name\n  await regexFileAsync(\n    '\"app_name\">Expo',\n    `\"app_name\">${xmlWeirdAndroidEscape(name)}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'strings.xml')\n  );\n\n  // Splash Screen background color\n  await regexFileAsync(\n    '\"splashBackground\">#FFFFFF',\n    `\"splashBackground\">${splashBackgroundColor}`,\n    path.join(shellPath, 'app', 'src', 'main', 'res', 'values', 'colors.xml')\n  );\n\n  // show only background color if LoadingView will appear\n  if (shouldShowLoadingView(manifest)) {\n    await regexFileAsync(\n      /<item>.*<\\/item>/,\n      '',\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'drawable', 'splash_background.xml')\n    );\n  }\n\n  // Remove exp:// scheme from LauncherActivity\n  await deleteLinesInFileAsync(\n    `START\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    `END\\ LAUNCHER\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Remove LAUNCHER category from HomeActivity\n  await deleteLinesInFileAsync(\n    `START\\ HOME\\ INTENT\\ FILTERS`,\n    `END\\ HOME\\ INTENT\\ FILTERS`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Add LAUNCHER category to ShellAppActivity\n  await regexFileAsync(\n    '<!-- ADD SHELL INTENT FILTERS HERE -->',\n    `<intent-filter>\n      <action android:name=\"android.intent.action.MAIN\"/>\n\n      <category android:name=\"android.intent.category.LAUNCHER\"/>\n    </intent-filter>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Add shell app scheme\n  if (scheme) {\n    await regexFileAsync(\n      '<!-- ADD SHELL SCHEME HERE -->',\n      `<intent-filter>\n        <data android:scheme=\"${scheme}\"/>\n\n        <action android:name=\"android.intent.action.VIEW\"/>\n\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <category android:name=\"android.intent.category.BROWSABLE\"/>\n      </intent-filter>`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // Add permissions\n  if (manifest.android && manifest.android.permissions) {\n    const content = await fs.readFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml'),\n      'utf-8'\n    );\n\n    // Get the list of optional permissions form manifest\n    const permissions = content\n      .replace(\n        /(([\\s\\S]*<!-- BEGIN OPTIONAL PERMISSIONS -->)|(<!-- END OPTIONAL PERMISSIONS -->[\\s\\S]*))/g,\n        ''\n      )\n      .match(/android:name=\".+\"/g)\n      .map(p => p.replace(/(android:name=|\")/g, ''));\n\n    const whitelist = [];\n\n    manifest.android.permissions.forEach(s => {\n      if (s.includes('.')) {\n        whitelist.push(s);\n      } else {\n        permissions.forEach(identifier => {\n          if (identifier.split('.').pop() === s) {\n            whitelist.push(identifier);\n          }\n        });\n      }\n    });\n\n    // Permissions we need to remove from the generated manifest\n    const blacklist = [\n      'android.permission.ACCESS_COARSE_LOCATION',\n      'android.permission.ACCESS_FINE_LOCATION',\n      'android.permission.CAMERA',\n      'android.permission.MANAGE_DOCUMENTS',\n      'android.permission.READ_CONTACTS',\n      'android.permission.READ_EXTERNAL_STORAGE',\n      'android.permission.READ_INTERNAL_STORAGE',\n      'android.permission.READ_PHONE_STATE',\n      'android.permission.RECORD_AUDIO',\n      'android.permission.USE_FINGERPRINT',\n      'android.permission.VIBRATE',\n      'android.permission.WRITE_EXTERNAL_STORAGE',\n      'com.anddoes.launcher.permission.UPDATE_COUNT',\n      'com.android.launcher.permission.INSTALL_SHORTCUT',\n      'com.google.android.gms.permission.ACTIVITY_RECOGNITION',\n      'com.google.android.providers.gsf.permission.READ_GSERVICES',\n      'com.htc.launcher.permission.READ_SETTINGS',\n      'com.htc.launcher.permission.UPDATE_SHORTCUT',\n      'com.majeur.launcher.permission.UPDATE_BADGE',\n      'com.sec.android.provider.badge.permission.READ',\n      'com.sec.android.provider.badge.permission.WRITE',\n      'com.sonyericsson.home.permission.BROADCAST_BADGE',\n    ].filter(p => !whitelist.includes(p));\n\n    await deleteLinesInFileAsync(\n      `BEGIN\\ OPTIONAL\\ PERMISSIONS`,\n      `END\\ OPTIONAL\\ PERMISSIONS`,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n\n    await regexFileAsync(\n      '<!-- ADD PERMISSIONS HERE -->',\n      `\n      ${whitelist.map(p => `<uses-permission android:name=\"${p}\" />`).join('\\n')}\n      ${blacklist\n        .map(p => `<uses-permission android:name=\"${p}\" tools:node=\"remove\" />`)\n        .join('\\n')}\n      `,\n      path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n    );\n  }\n\n  // OAuth redirect scheme\n  await regexFileAsync(\n    '<data android:scheme=\"host.exp.exponent\" android:path=\"oauthredirect\"/>',\n    `<data android:scheme=\"${javaPackage}\" android:path=\"oauthredirect\"/>`,\n    path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n  );\n\n  // Embed manifest and bundle\n  if (isFullManifest) {\n    await fs.writeFileSync(\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app-manifest.json'),\n      JSON.stringify(manifest)\n    );\n    await saveUrlToPathAsync(\n      bundleUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'assets', 'shell-app.bundle')\n    );\n\n    await regexFileAsync(\n      '// START EMBEDDED RESPONSES',\n      `\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new EmbeddedResponse(\"${fullManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new EmbeddedResponse(\"${bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));`,\n      path.join(\n        shellPath,\n        'expoview',\n        'src',\n        'main',\n        'java',\n        'host',\n        'exp',\n        'exponent',\n        'Constants.java'\n      )\n    );\n  }\n\n  await regexFileAsync(\n    'RELEASE_CHANNEL = \"default\"',\n    `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n    path.join(\n      shellPath,\n      'expoview',\n      'src',\n      'main',\n      'java',\n      'host',\n      'exp',\n      'exponent',\n      'Constants.java'\n    )\n  );\n\n  // Icon\n  if (iconUrl) {\n    (await globby(['**/ic_launcher.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await saveUrlToPathAsync(\n      iconUrl,\n      path.join(shellPath, 'app', 'src', 'main', 'res', 'mipmap-hdpi', 'ic_launcher.png')\n    );\n\n    (await globby(['**/ic_launcher.png'], {\n      cwd: path.join(shellPath, 'expoview', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n    await saveUrlToPathAsync(\n      iconUrl,\n      path.join(shellPath, 'expoview', 'src', 'main', 'res', 'mipmap-hdpi', 'ic_launcher.png')\n    );\n  }\n\n  if (notificationIconUrl) {\n    (await globby(['**/shell_notification_icon.png'], {\n      cwd: path.join(shellPath, 'app', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    await saveUrlToPathAsync(\n      notificationIconUrl,\n      path.join(\n        shellPath,\n        'app',\n        'src',\n        'main',\n        'res',\n        'drawable-hdpi',\n        'shell_notification_icon.png'\n      )\n    );\n\n    (await globby(['**/shell_notification_icon.png'], {\n      cwd: path.join(shellPath, 'expoview', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n    await saveUrlToPathAsync(\n      notificationIconUrl,\n      path.join(\n        shellPath,\n        'expoview',\n        'src',\n        'main',\n        'res',\n        'drawable-hdpi',\n        'shell_notification_icon.png'\n      )\n    );\n  }\n\n  // Splash Background\n  if (backgroundImages && backgroundImages.length > 0) {\n    // Delete the placeholder images\n    (await globby(['**/shell_launch_background_image.png'], {\n      cwd: path.join(shellPath, 'expoview', 'src', 'main', 'res'),\n      absolute: true,\n    })).forEach(filePath => {\n      fs.removeSync(filePath);\n    });\n\n    _.forEach(backgroundImages, async image => {\n      await saveUrlToPathAsync(image.url, image.path);\n    });\n  }\n\n  let certificateHash = '';\n  let googleAndroidApiKey = '';\n  let privateConfig = context.data.privateConfig;\n  if (privateConfig) {\n    let branch = privateConfig.branch;\n    let fabric = privateConfig.fabric;\n    let googleMaps = privateConfig.googleMaps;\n    let googleSignIn = privateConfig.googleSignIn;\n\n    // Branch\n    if (branch) {\n      await regexFileAsync(\n        '<!-- ADD BRANCH CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.branch.sdk.BranchKey\"\n      android:value=\"${branch.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Fabric\n    if (fabric) {\n      await fs.remove(path.join(shellPath, 'app', 'fabric.properties'));\n      await fs.writeFileSync(\n        path.join(shellPath, 'app', 'fabric.properties'),\n        `apiSecret=${fabric.buildSecret}\\n`\n      );\n\n      await deleteLinesInFileAsync(\n        `BEGIN\\ FABRIC\\ CONFIG`,\n        `END\\ FABRIC\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD FABRIC CONFIG HERE -->',\n        `<meta-data\n      android:name=\"io.fabric.ApiKey\"\n      android:value=\"${fabric.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Maps\n    if (googleMaps) {\n      await deleteLinesInFileAsync(\n        `BEGIN\\ GOOGLE\\ MAPS\\ CONFIG`,\n        `END\\ GOOGLE\\ MAPS\\ CONFIG`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n      await regexFileAsync(\n        '<!-- ADD GOOGLE MAPS CONFIG HERE -->',\n        `<meta-data\n      android:name=\"com.google.android.geo.API_KEY\"\n      android:value=\"${googleMaps.apiKey}\"/>`,\n        path.join(shellPath, 'app', 'src', 'main', 'AndroidManifest.xml')\n      );\n    }\n\n    // Google Login\n    if (googleSignIn) {\n      certificateHash = googleSignIn.certificateHash;\n      googleAndroidApiKey = googleSignIn.apiKey;\n    }\n  }\n\n  // Google sign in\n  await regexFileAsync(\n    /\"current_key\": \"(.*?)\"/,\n    `\"current_key\": \"${googleAndroidApiKey}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n  await regexFileAsync(\n    /\"certificate_hash\": \"(.*?)\"/,\n    `\"certificate_hash\": \"${certificateHash}\"`,\n    path.join(shellPath, 'app', 'google-services.json')\n  );\n}\n\nasync function buildShellAppAsync(context: StandaloneContext) {\n  let shellPath = shellPathForContext(context);\n\n  if (context.build.android) {\n    let androidBuildConfiguration = context.build.android;\n\n    try {\n      await fs.remove(`shell-unaligned.apk`);\n      await fs.remove(`shell.apk`);\n    } catch (e) {}\n    const gradleArgs = [`assembleProdRelease`];\n    if (!!process.env.GRADLE_DAEMON_DISABLED) {\n      gradleArgs.unshift('--no-daemon');\n    }\n    await spawnAsyncThrowError(`./gradlew`, gradleArgs, {\n      stdio: 'inherit',\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(shellPath, 'app', 'build', 'outputs', 'apk', 'app-prod-release-unsigned.apk'),\n      `shell-unaligned.apk`\n    );\n    await spawnAsync(`jarsigner`, [\n      '-verbose',\n      '-sigalg',\n      'SHA1withRSA',\n      '-digestalg',\n      'SHA1',\n      '-storepass',\n      androidBuildConfiguration.keystorePassword,\n      '-keypass',\n      androidBuildConfiguration.keyPassword,\n      '-keystore',\n      androidBuildConfiguration.keystore,\n      'shell-unaligned.apk',\n      androidBuildConfiguration.keyAlias,\n    ]);\n    await spawnAsync(`zipalign`, ['-v', '4', 'shell-unaligned.apk', 'shell.apk']);\n    try {\n      await fs.remove('shell-unaligned.apk');\n    } catch (e) {}\n    await spawnAsync(`jarsigner`, [\n      '-verify',\n      '-verbose',\n      '-certs',\n      '-keystore',\n      androidBuildConfiguration.keystore,\n      'shell.apk',\n    ]);\n    await fs.copy('shell.apk', androidBuildConfiguration.outputFile || '/tmp/shell-signed.apk');\n  } else {\n    let androidSrcPath = path.join(exponentDirectory(), 'android');\n    await fs.copy(\n      path.join(androidSrcPath, 'debug.keystore'),\n      path.join(shellPath, 'debug.keystore')\n    );\n    try {\n      await fs.remove('shell-debug.apk');\n    } catch (e) {}\n    await spawnAsyncThrowError(`./gradlew`, ['assembleDevRemoteKernelDebug'], {\n      stdio: 'inherit',\n      cwd: shellPath,\n    });\n    await fs.copy(\n      path.join(shellPath, 'app', 'build', 'outputs', 'apk', 'app-devRemoteKernel-debug.apk'),\n      `/tmp/shell-debug.apk`\n    );\n  }\n}\n"],"sourceRoot":"/xdl/src"}